package pl.edu.pwr.student.djablonski.obywatel.GUI;

import pl.edu.pwr.student.djablonski.database.context.Context;
import pl.edu.pwr.student.djablonski.database.data.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

public class Zgloszenia extends JPanel {
    private JPanel main;
    private JTable zgloszeniaTable;
    private JButton dodajNoweZgloszenieButton;
    private JTable zakonczoneTable;
    private JButton usunButton;
    private JButton szczegolyButton;
    private JButton szczegolyZakonczoneButton;

    public static void start(Obywatel o) {
        JFrame frame = new JFrame("Zgloszenia");
        frame.setContentPane(new Zgloszenia(o).main);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    public Zgloszenia(Obywatel o) {
        $$$setupUI$$$();
        try {
            List<Zgloszenie> zgloszenia = Context.daoZgloszenie.readAllBy("id_obywatela", o.id());
            DefaultTableModel tmzg = (DefaultTableModel) zgloszeniaTable.getModel();
            DefaultTableModel tmza = (DefaultTableModel) zakonczoneTable.getModel();

            for (Zgloszenie z : zgloszenia) {
                if (z.getStatus().equals(Status.zakonczone)) {
                    Object[] ob = z.toTableRow();

                    List<Decyzja> decyzje = Context.daoDecyzja.readAllBy("id_zgloszenia", z.id());

                    tmza.addRow(new Object[]{ob[0], ob[1], ob[2], decyzje.get(0).getOpis()});
                } else {
                    tmzg.addRow(z.toTableRow());
                }
            }
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }

        dodajNoweZgloszenieButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                createZgloszenie.start(o, (DefaultTableModel) zgloszeniaTable.getModel());
            }
        });
        szczegolyButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (zgloszeniaTable.getSelectedRow() != -1) {
                    Drzewa.start((Integer) zgloszeniaTable.getValueAt(zgloszeniaTable.getSelectedRow(), 0));
                }
            }
        });
        szczegolyZakonczoneButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (zakonczoneTable.getSelectedRow() != -1) {
                    Drzewa.start((Integer) zakonczoneTable.getValueAt(zakonczoneTable.getSelectedRow(), 0));
                }
            }
        });
        usunButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                DefaultTableModel tmzg = (DefaultTableModel) zgloszeniaTable.getModel();
                for (int i = zgloszeniaTable.getSelectedRows().length - 1; i >= 0; i--) {
                    if (zgloszeniaTable.getValueAt(zgloszeniaTable.getSelectedRows()[i], 1).equals(Status.zlozone)) {
                        try {
                            Context.daoZgloszenie.delete((Integer) zgloszeniaTable.getValueAt(zgloszeniaTable.getSelectedRows()[i], 0));
                            tmzg.removeRow(zgloszeniaTable.getSelectedRows()[i]);
                        } catch (Exception ex) {
                            throw new RuntimeException(ex);
                        }
                    }
                }
            }
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        main = new JPanel();
        main.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        main.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setViewportView(zgloszeniaTable);
        dodajNoweZgloszenieButton = new JButton();
        dodajNoweZgloszenieButton.setText("Dodaj nowe Zgłoszenie");
        main.add(dodajNoweZgloszenieButton, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane2 = new JScrollPane();
        main.add(scrollPane2, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane2.setViewportView(zakonczoneTable);
        szczegolyButton = new JButton();
        szczegolyButton.setText("Szczegóły");
        main.add(szczegolyButton, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        usunButton = new JButton();
        usunButton.setText("Usuń");
        main.add(usunButton, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        szczegolyZakonczoneButton = new JButton();
        szczegolyZakonczoneButton.setText("Szczegóły");
        main.add(szczegolyZakonczoneButton, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return main;
    }

    private void createUIComponents() {
        DefaultTableModel tmzg = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tmzg.addColumn("Numer Zgłoszenia");
        tmzg.addColumn("Status");
        tmzg.addColumn("Data");

        zgloszeniaTable = new JTable(tmzg);

        DefaultTableModel tmza = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tmza.addColumn("Numer Zgłoszenia");
        tmza.addColumn("Status");
        tmza.addColumn("Data");
        tmza.addColumn("Opis");

        zakonczoneTable = new JTable(tmza);
    }
}
